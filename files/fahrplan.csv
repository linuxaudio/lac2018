Room,Date,Day,Start,Duration,Title,ID,Abstract,Description,Language,Speakers,File URL
mainhall,2018-06-07,1,18:00,00:30,Welcome Speech,100,A short welcome speech by the team.,A short welcome speech by the team.,en,1:LAC team, 
mainhall,2018-06-07,1,19:00,02:00,BBQ,101,"There will be a barbecue with a limited set of food. First come, first served!","There will be a barbecue with a limited set of food. First come, first served!",en,1:LAC team, 
mainhall,2018-06-07,1,21:00,01:30,Superdirt,58,,,en,2:Superdirt^2, 
mainhall,2018-06-07,1,23:00,02:00,Louigi Verona,8,"A minimal house DJ set with Mixxx. Already performed at Sonoj to positive reviews, so I am confident this could be a nice addition to music nights.

Unfortunately, I don’t have any recordings of my performances, however I am using only my 
original music for sets and here are the links to some of the tunes I will definitely include into the 
playlist:
https://soundcloud.com/louigiverona/serenity-berlin-songbook-vol2
https://soundcloud.com/louigiverona/boat-at-the-mouth-of-a-river-berlin-songbook-vol2
https://soundcloud.com/louigiverona/i-am-at-the-club-berlin-songbook-vol2
https://soundcloud.com/louigiverona/berlin-berlin-songbook-vol2
https://soundcloud.com/louigiverona/stranger-berlin-songbook-vol2
https://soundcloud.com/louigiverona/berlin-songbook-vol-2-lair","A minimal house DJ set with Mixxx. Already performed at Sonoj to positive reviews, so I am confident this could be a nice addition to music nights.

Unfortunately, I don’t have any recordings of my performances, however I am using only my 
original music for sets and here are the links to some of the tunes I will definitely include into the 
playlist:
https://soundcloud.com/louigiverona/serenity-berlin-songbook-vol2
https://soundcloud.com/louigiverona/boat-at-the-mouth-of-a-river-berlin-songbook-vol2
https://soundcloud.com/louigiverona/i-am-at-the-club-berlin-songbook-vol2
https://soundcloud.com/louigiverona/berlin-berlin-songbook-vol2
https://soundcloud.com/louigiverona/stranger-berlin-songbook-vol2
https://soundcloud.com/louigiverona/berlin-songbook-vol-2-lair",en,3:Louigi Verona, 
mainhall,2018-06-08,2,10:00,00:30,Using Perlin noise in sound synthesis,14,"Perlin noise is a well known algorithm in computer graphics applications and one of the first algorithms for generating procedural textures. It has been very widely used in movies, games, demos, and landscape generators, but despite its popularity it has been seldom used for creative purposes in the fields outside the world of computer graphics. This paper discusses the use of Perlin noise and fractional Brownian motion for sound synthesis applications.","Perlin noise is a well known algorithm in computer graphics applications and one of the first algorithms for generating procedural textures. It has been very widely used in movies, games, demos, and landscape generators, but despite its popularity it has been seldom used for creative purposes in the fields outside the world of computer graphics. This paper discusses the use of Perlin noise and fractional Brownian motion for sound synthesis applications.",en,4:Artem Popov, 
mainhall,2018-06-08,2,10:30,00:30,SpectMorph: Morphing the Timbre of Musical Instruments,18,"SpectMorph is an open source software which performs morphing of the timbre of musical instruments. This allows creating sounds that smoothly transition from the timbre of one instrument to the timbre of another instrument. There are three steps necessary to obtain the final sound. In the analysis, we use the fourier transform to create models of the spectrum of the input samples. During synthesis a time domain signal can be obtained from these data. An algorithm for morphing the spectral models of multiple instruments is the core of our method. Synthesis and morphing can be done in real-time. After the description of the theoretical background, we provide an overview of the features of the SpectMorph plugin.","SpectMorph is an open source software which performs morphing of the timbre of musical instruments. This allows creating sounds that smoothly transition from the timbre of one instrument to the timbre of another instrument. There are three steps necessary to obtain the final sound. In the analysis, we use the fourier transform to create models of the spectrum of the input samples. During synthesis a time domain signal can be obtained from these data. An algorithm for morphing the spectral models of multiple instruments is the core of our method. Synthesis and morphing can be done in real-time. After the description of the theoretical background, we provide an overview of the features of the SpectMorph plugin.",en,5:Stefan Westerfeld, 
mainhall,2018-06-08,2,11:00,00:30,"RSVP, a preset system solution for Pure Data",32,"This paper describes the logic and process behind the development of the RSVP preset library for the Pure Data programming environment. The library aims to tackle the lack of a native preset system in Pure Data. Other projects like Kollabs, CREAM, sssad, and others, have produced different solutions for this issue. However, after experimenting with the mentioned libraries, I decided to approach the matter with a different strategy. This led to the creation of the RSVP library which I will be describing in detail. During the development of this project, I have been theorizing of a feature request for PD that will also be shared here. This paper will offer a detailed description of how the system works, but will not go into extensive Pure Data patch descriptions. Instead, I wish to show how I structured the code and describe how the system functions with the users own projects.","This paper describes the logic and process behind the development of the RSVP preset library for the Pure Data programming environment. The library aims to tackle the lack of a native preset system in Pure Data. Other projects like Kollabs, CREAM, sssad, and others, have produced different solutions for this issue. However, after experimenting with the mentioned libraries, I decided to approach the matter with a different strategy. This led to the creation of the RSVP library which I will be describing in detail. During the development of this project, I have been theorizing of a feature request for PD that will also be shared here. This paper will offer a detailed description of how the system works, but will not go into extensive Pure Data patch descriptions. Instead, I wish to show how I structured the code and describe how the system functions with the users own projects.",en,6:Jose Rafael Subía Valdez, 
ceminar,2018-06-08,2,12:00,02:00,Introduction to pmpd,28,"Physical modelling is a synthesis technique where data is generated through emulating physical models, instead of using premade elements such as wave tables or recorded samples. Data based on physical models usually has a more “natural” expressivity, as it is based on rules similar to the physics of the natural world.
This workshop introduces pmpd, a library by Cyrille Henry that implements a mass-spring system to build physical models. The data generated by the circuits can be used as control data for audio or video, or to synthetize sounds directly.
The workshop will use the software Pure Data; the participants will receive commented didactic materials, which they will be able to later edit and tweak for their own use. To learn the concepts, experience in Pure Data isn’t necessary – although for further individual work it will be required.
Partitipants should bring their own laptops and headphones.","Physical modelling is a synthesis technique where data is generated through emulating physical models, instead of using premade elements such as wave tables or recorded samples. Data based on physical models usually has a more “natural” expressivity, as it is based on rules similar to the physics of the natural world.
This workshop introduces pmpd, a library by Cyrille Henry that implements a mass-spring system to build physical models. The data generated by the circuits can be used as control data for audio or video, or to synthetize sounds directly.
The workshop will use the software Pure Data; the participants will receive commented didactic materials, which they will be able to later edit and tweak for their own use. To learn the concepts, experience in Pure Data isn’t necessary – although for further individual work it will be required.
Partitipants should bring their own laptops and headphones.",en,7:Joao Pais, 
mainhall,2018-06-08,2,12:00,00:30,Open Hardware Multichannel Sound Interface for Hearing Aid Research on BeagleBone Black with openMHA: Cape4all,35,"The paper describes a new multichannel sound interface for the
BeagleBone Black, ""Cape4all"".
The sound interface has 6 input channels with optional microphone
pre-amplifiers and between 4 and 6 output channels.
The multichannel sound extension cape for the BeagleBone
Black is designed and produced.
An ALSA driver is written for it.
It is used with the openMHA hearing aid research software to perform
hearing aid signal processing on the BeagleBone Black with a
customized Debian distribution tailored to real-time audio signal processing.","The paper describes a new multichannel sound interface for the
BeagleBone Black, ""Cape4all"".
The sound interface has 6 input channels with optional microphone
pre-amplifiers and between 4 and 6 output channels.
The multichannel sound extension cape for the BeagleBone
Black is designed and produced.
An ALSA driver is written for it.
It is used with the openMHA hearing aid research software to perform
hearing aid signal processing on the BeagleBone Black with a
customized Debian distribution tailored to real-time audio signal processing.",en,8:Tobias Herzke| 9:Hendrik Kayser|10:Christopher Seifert| 11:Paul Maanen| 12:Christopher Obbard| 13:Guillermo Payá-Vayá| 14:Holger Blume| 15: Volker Hohmann, 
mainhall,2018-06-08,2,12:30,00:30,MRuby-Zest: a Scriptable Audio GUI Framework,38,"Audio tools face a set of uncommon user interface
design and implementation challenges. These constraints make high quality interfaces within the open
source realm particular difficult to execute on volunteer time. The challenges include producing a
unique identity for the application, providing easy
to use controls for the parameters of the application,
and providing interesting ways to visualize the data
within the application. Additionally, existing toolkits produce technical issues when embedding within
plugin hosts. MRuby-Zest is a new toolkit that was
build while the ZynAddSubFX user interface was
rewritten. This toolkit possesses unique characteristics within open source toolkits which target the
problems specific to audio applications.","Audio tools face a set of uncommon user interface
design and implementation challenges. These constraints make high quality interfaces within the open
source realm particular difficult to execute on volunteer time. The challenges include producing a
unique identity for the application, providing easy
to use controls for the parameters of the application,
and providing interesting ways to visualize the data
within the application. Additionally, existing toolkits produce technical issues when embedding within
plugin hosts. MRuby-Zest is a new toolkit that was
build while the ZynAddSubFX user interface was
rewritten. This toolkit possesses unique characteristics within open source toolkits which target the
problems specific to audio applications.",en,16:Mark McCurry, 
mainhall,2018-06-08,2,13:00,00:30,Camomile: Creating audio plugins with Pure Data,44,"Camomile is an audio plugin with Pure Data embedded allowing to create original and cross-platform audio plugins using patches and that could run in any digital audio workstation that accepts the VST or Audio Unit formats. The paper presents an overview of the current functionalities of Camomile and the possibilities offered by this tool. Following this, the main lines of the future developments are exposed.","Camomile is an audio plugin with Pure Data embedded allowing to create original and cross-platform audio plugins using patches and that could run in any digital audio workstation that accepts the VST or Audio Unit formats. The paper presents an overview of the current functionalities of Camomile and the possibilities offered by this tool. Following this, the main lines of the future developments are exposed.",en,17:Pierre Guillot, 
ceminar,2018-06-08,2,14:30,01:00,The levTools – a modular toolset in purr data for creating and teaching electronic music,11,"The levTools are a set of abstractions for Pure Data, that are primarily designed for teaching electronic music. Moreover, they have a huge creative potential for experienced pd-users or computer musicians in general, especially when working on linux-based OS. The flexible and open character of the modular toolset allows multiple approaches.
The levTools are free and open source. They were developed by Marten Seedorf in the context of the Berlin based lev–project, an educational project focussing on electronic music culture.
This workshop introduces the levTools.","The levTools are a set of abstractions for Pure Data, that are primarily designed for teaching electronic music. Moreover, they have a huge creative potential for experienced pd-users or computer musicians in general, especially when working on linux-based OS. The flexible and open character of the modular toolset allows multiple approaches.
The levTools are free and open source. They were developed by Marten Seedorf in the context of the Berlin based lev–project, an educational project focussing on electronic music culture.
This workshop introduces the levTools.",en,18:Marten Seedorf| 19:Simon Steinhaus, 
mainhall,2018-06-08,2,14:30,01:30,Djing with FLOSS: Mixxx Workshop,7,"Many of us would love to start DJing with software, comparable to commercial offerings out there. Thanks to the fantastic work that the Mixxx has done, it is now possible.

However, Mixxx could be a little off-putting due to the fact that setting a controller up might not be as user friendly as with software like Traktor.

Louigi will run through all the difficult places, demonstrate how to set things up with a random midi controller (i.e., not explicitly supported by Mixxx templates), and how to use scripts.

Hopefully after this workshop people will have a good guide on how to start working with Mixxx!

A list of things discussed:

1. Choosing an XML template for Mixxx UI
2. Customizing the template for your needs
3. Setting up preferences
4. Adding a midi controller in

   4.1 Figuring out the midi signals map

   4.2 Organizing your controller XML file

   4.3 Scripting and why its not scary

5. A demo
","Many of us would love to start DJing with software, comparable to commercial offerings out there. Thanks to the fantastic work that the Mixxx has done, it is now possible.

However, Mixxx could be a little off-putting due to the fact that setting a controller up might not be as user friendly as with software like Traktor.

Louigi will run through all the difficult places, demonstrate how to set things up with a random midi controller (i.e., not explicitly supported by Mixxx templates), and how to use scripts.

Hopefully after this workshop people will have a good guide on how to start working with Mixxx!

A list of things discussed:

1. Choosing an XML template for Mixxx UI
2. Customizing the template for your needs
3. Setting up preferences
4. Adding a midi controller in

   4.1 Figuring out the midi signals map

   4.2 Organizing your controller XML file

   4.3 Scripting and why its not scary

5. A demo
",en,3:Louigi Verona, 
spektrum,2018-06-08,2,16:00,04:00,Caracoles IV,57,"Caracoles IV is an installation that uses interactive feedback systems to sonically explore modified conch shells known as a pututus, which are andean musical instruments fashioned out of conch shells. These instruments existed far before colonial occupation in the 15th century and work as a kind of cornet or trumpet, by adding an embouchure to the shell. However, this musical instrument is not created by a human alone, but is also the creation of a large snail which once inhabited it; it is the mollusc’s exoskeleton and home and it is shaped by its existence. When the snail dies, the spiral-shaped shell is emptied of its organic body and eventually appropriated by the instrument maker to fashion an instrument out of it. In this installation, a third appropriation takes place: I place a microphone in the embouchure and a speaker at the end of the spiral canal and connect them through a feedback system controlled by a Pure Data (Pd) patch running on a raspberry pi zero, all hidden inside the shell. The system detects resonant feedback frequencies and temporarily cancels them with filters to push the system to find another resonant frequency, and so on, generating in this way a sequence of resonant frequencies of the shell. This installation is also a play on the belief that conch shells are a way to listen to the sea. In fact, the shell acts as a filter and resonant cavity to our own bodies and spaces, thus, its resonant frequencies are activated by the presence of people in the installation space. In this way, each shell is a collaboration between humans, conch-shells and interactive systems, but also an interaction between all of the shells because each of them have their own acoustic properties, but their resonances are audible to each other, thus generating unpredictable sonic landscapes.","Caracoles IV is an installation that uses interactive feedback systems to sonically explore modified conch shells known as a pututus, which are andean musical instruments fashioned out of conch shells. These instruments existed far before colonial occupation in the 15th century and work as a kind of cornet or trumpet, by adding an embouchure to the shell. However, this musical instrument is not created by a human alone, but is also the creation of a large snail which once inhabited it; it is the mollusc’s exoskeleton and home and it is shaped by its existence. When the snail dies, the spiral-shaped shell is emptied of its organic body and eventually appropriated by the instrument maker to fashion an instrument out of it. In this installation, a third appropriation takes place: I place a microphone in the embouchure and a speaker at the end of the spiral canal and connect them through a feedback system controlled by a Pure Data (Pd) patch running on a raspberry pi zero, all hidden inside the shell. The system detects resonant feedback frequencies and temporarily cancels them with filters to push the system to find another resonant frequency, and so on, generating in this way a sequence of resonant frequencies of the shell. This installation is also a play on the belief that conch shells are a way to listen to the sea. In fact, the shell acts as a filter and resonant cavity to our own bodies and spaces, thus, its resonant frequencies are activated by the presence of people in the installation space. In this way, each shell is a collaboration between humans, conch-shells and interactive systems, but also an interaction between all of the shells because each of them have their own acoustic properties, but their resonances are audible to each other, thus generating unpredictable sonic landscapes.",en,22:Jaime E Oliver La Rosa, 
ceminar,2018-06-08,2,17:00,02:00,Inbuilt Musicality,12,"This Workshop demonstrates the use of the Yoshimi soft synthesiser as a platform for building entirely synthetic musical instruments, based on exploring the structure and interplay of defining traits within musical sound. Starting from characteristic overtones and spectral patterns as foundation, the specific body of the tone can be shaped by fine tuning the transients. Further techniques of transforming the sound are used to build a fabric of related sound layers and create a distinct voice, able to operate within the musical context of the composition.","This Workshop demonstrates the use of the Yoshimi soft synthesiser as a platform for building entirely synthetic musical instruments, based on exploring the structure and interplay of defining traits within musical sound. Starting from characteristic overtones and spectral patterns as foundation, the specific body of the tone can be shaped by fine tuning the transients. Further techniques of transforming the sound are used to build a fabric of related sound layers and create a distinct voice, able to operate within the musical context of the composition.",en,20:Hermann Voßeler, 
mainhall,2018-06-08,2,17:00,01:30,Getting Started with Purr Data,15,"This hands-on workshop is intended for Pd and Linux audio users who want to start using Purr Data. For an introduction to Purr Data, please check our [LAC17 presentation](https://www.youtube.com/watch?v=T1wo496Zx0s) and the [Quick Introduction](https://agraef.github.io/purr-data-intro). Topics of the 90 min workshop vary from the basics to the moderately advanced and include:

- Getting a minimal Purr Data installation up and running quickly on Linux (compiling from source).

- First-time setup (configuring MIDI and audio devices, setting up Pd-Lua).

- Real-time audio and MIDI processing, making music with Purr Data.

- Programming new objects (a.k.a. Pd externals) the easy way with [Pd-Lua](https://github.com/agraef/pd-lua).

- Custom graphics and data structure visualizations in Purr Data.
","This hands-on workshop is intended for Pd and Linux audio users who want to start using Purr Data. For an introduction to Purr Data, please check our [LAC17 presentation](https://www.youtube.com/watch?v=T1wo496Zx0s) and the [Quick Introduction](https://agraef.github.io/purr-data-intro). Topics of the 90 min workshop vary from the basics to the moderately advanced and include:

- Getting a minimal Purr Data installation up and running quickly on Linux (compiling from source).

- First-time setup (configuring MIDI and audio devices, setting up Pd-Lua).

- Real-time audio and MIDI processing, making music with Purr Data.

- Programming new objects (a.k.a. Pd externals) the easy way with [Pd-Lua](https://github.com/agraef/pd-lua).

- Custom graphics and data structure visualizations in Purr Data.
",en,21:Albert Gräf, 
ceminar,2018-06-08,2,20:00,04:00,Sentire,17,"Sentire is an Italian word that means both to hear and to feel. The project is about exploring the fine mixture of these two senses and, particularly, to their amplification and morphing.

'Sentire' project was initiated by two Berlin-based artists Marcello Lussana and Olga Kozmanidze in 2016. The project consists of two parts: immersive performance series based on interactive sound and PhD research on human perception. In the course of the project we have been using a device (bracelets) connecting two people to the sound system and tracking distance and touch events between them. We apply and constantly develop a method of device usage according to which participants proceed through a scenario of two phases interaction. Depending on distance and touch between them different sounds are triggered and changing, creating an instant sound feedback. Gradually both hearing and sense of touch morth one into another giving a chance to perceive one's body on a deep level.

The interactive system has been designed with the Supercollider software and it runs on Linux Mint.","Sentire is an Italian word that means both to hear and to feel. The project is about exploring the fine mixture of these two senses and, particularly, to their amplification and morphing.

'Sentire' project was initiated by two Berlin-based artists Marcello Lussana and Olga Kozmanidze in 2016. The project consists of two parts: immersive performance series based on interactive sound and PhD research on human perception. In the course of the project we have been using a device (bracelets) connecting two people to the sound system and tracking distance and touch events between them. We apply and constantly develop a method of device usage according to which participants proceed through a scenario of two phases interaction. Depending on distance and touch between them different sounds are triggered and changing, creating an instant sound feedback. Gradually both hearing and sense of touch morth one into another giving a chance to perceive one's body on a deep level.

The interactive system has been designed with the Supercollider software and it runs on Linux Mint.",en,40:Marcello Lussana, 
mainhall,2018-06-08,2,21:00,00:10,Memorie,29,"This composition is made up of sounds that represent various moments of my childhood. In particular, I used sounds that still make me feel special emotions such as: the rain, the planes, the clamour of people, musical bands, the tick of old clocks, the glitches, etc. By listening to this piece I go back to that period of my life which I am particularly attached to and which unfortunately will not return any more.
This composition has been realized with Linux KXstudio.","This composition is made up of sounds that represent various moments of my childhood. In particular, I used sounds that still make me feel special emotions such as: the rain, the planes, the clamour of people, musical bands, the tick of old clocks, the glitches, etc. By listening to this piece I go back to that period of my life which I am particularly attached to and which unfortunately will not return any more.
This composition has been realized with Linux KXstudio.",en,24:Massimo Fragalà, 
mainhall,2018-06-08,2,21:11,00:08,Dark Path #2 (multichannel vers.),55,None,None,en,26:Anna Terzaroli, 
mainhall,2018-06-08,2,21:22,00:11,Iammix,51,Electroacoustic 8-channel fixed media composition,Electroacoustic 8-channel fixed media composition,en,28:Magnus Johansson, 
mainhall,2018-06-08,2,21:35,00:09,Bus No. 1,45,None,None,en,27:Helene Hedsund, 
mainhall,2018-06-08,2,22:30,00:08,Atlas Of Uncertainty,1,"Atlas of Uncertainty is an experimental music video based on the representation of 4 Classical elements, that typically refer to the concepts in Ancient Greece of water, fire, earth and aether, which were proposed to explain the nature and complexity of all matter in terms of simpler substances.
The music that accompanies this computer generated video is a sonic continuum ranging from unaltered natural sounds to entirely new sounds - or, more poetically -- from the real world to the realm of the imagination. of the imagination.
Heterogeneous inharmonic sound materials are explored through various techniques (granular, subtractive). The sounds and the images are here combined in well- identifiable gestures.

The video received two HONORABLE MENTIONS in India and USA; and a prize as best short in Canada and has also been finalist in some competitions (ROMART BIENNALE 2017,
Rome, Italy; MATERA INTERMEDIA 2017, Matera, ITALY);
","Atlas of Uncertainty is an experimental music video based on the representation of 4 Classical elements, that typically refer to the concepts in Ancient Greece of water, fire, earth and aether, which were proposed to explain the nature and complexity of all matter in terms of simpler substances.
The music that accompanies this computer generated video is a sonic continuum ranging from unaltered natural sounds to entirely new sounds - or, more poetically -- from the real world to the realm of the imagination. of the imagination.
Heterogeneous inharmonic sound materials are explored through various techniques (granular, subtractive). The sounds and the images are here combined in well- identifiable gestures.

The video received two HONORABLE MENTIONS in India and USA; and a prize as best short in Canada and has also been finalist in some competitions (ROMART BIENNALE 2017,
Rome, Italy; MATERA INTERMEDIA 2017, Matera, ITALY);
",en,23:Massimo Vito Avantaggiato, 
mainhall,2018-06-08,2,22:40,00:10,Spycher,48,tape 8 ch,tape 8 ch,en,29:Michele Del Prete, 
mainhall,2018-06-08,2,22:52,00:15,SHIFT,16,"SHIFT (2014)
psychoacoustic music for 140 oscillators

SHIFT is rather a psychoacoustic than an electroacoustic piece. Because the usual musical aspects of composition, temporal structures or single sound events are secondary here. The focal point of this piece is the shifting attention during listening. The essential events in this piece are the individual moments when the attention of the listener detaches itself from the perceived sound which evolves only very slowly and which seems to be rather static for a long time.
Looking for changes in the environment and being alerted by sudden events is the daily business of our brains - a heritage of our evolutionary history. We are adapting our senses to the slightest input changes if nothing else is happening. So even when there is just one and the same sound texture we tend to extract a foreground from a slowly changing background after a while - even when there is no real difference.
The points of a change in the listeners perception, the detection - or rather invention - of events or objects, are highly individual here - they are not composed, they appear only in the heads of the listeners.
My advice for listening to this piece is: do not try to analyze the sounds as you would do with other pieces but try to focus on how you listen to it - be attentive to your attention!

This piece is generated in realtime with SuperCollider. It is based on additive synthesis techniques:
there are 140 single sine oscillators which are always modulated in frequency, amplitude and spatial position. The modulation processes for all oscillators are basically the same but the do not happen exactly at the same time, they are spread over long time intervals - resulting in slowly evolving sound textures.
The 140 generated audio signals are dynamically distributed in space by the software and adapted to as many as available loudspeakers in order to get a real immersive experience.","SHIFT (2014)
psychoacoustic music for 140 oscillators

SHIFT is rather a psychoacoustic than an electroacoustic piece. Because the usual musical aspects of composition, temporal structures or single sound events are secondary here. The focal point of this piece is the shifting attention during listening. The essential events in this piece are the individual moments when the attention of the listener detaches itself from the perceived sound which evolves only very slowly and which seems to be rather static for a long time.
Looking for changes in the environment and being alerted by sudden events is the daily business of our brains - a heritage of our evolutionary history. We are adapting our senses to the slightest input changes if nothing else is happening. So even when there is just one and the same sound texture we tend to extract a foreground from a slowly changing background after a while - even when there is no real difference.
The points of a change in the listeners perception, the detection - or rather invention - of events or objects, are highly individual here - they are not composed, they appear only in the heads of the listeners.
My advice for listening to this piece is: do not try to analyze the sounds as you would do with other pieces but try to focus on how you listen to it - be attentive to your attention!

This piece is generated in realtime with SuperCollider. It is based on additive synthesis techniques:
there are 140 single sine oscillators which are always modulated in frequency, amplitude and spatial position. The modulation processes for all oscillators are basically the same but the do not happen exactly at the same time, they are spread over long time intervals - resulting in slowly evolving sound textures.
The 140 generated audio signals are dynamically distributed in space by the software and adapted to as many as available loudspeakers in order to get a real immersive experience.",en,25:Andre Bartetzki, 
mainhall,2018-06-09,3,10:00,01:00,MOD: building a sustainable Linux Audio based business,102,"The MOD Project: an overview of the history, some comments and
considerations about an Open Source Linux Audio centric hardware business
attempt and some insights for the future.

MOD was born in 2010, first debuted at LAC in 2013, crowdfunded a mass
product in 2014, delivered it in 2016, consolidated in 2017 and got funded
in 2018.

These 8 years have been quite interesting and a lot has happened along. I
would like to go over this history and present what were the main
difficulties found along the way. I’d also put on the table some
considerations about the Open Source Linux Audio centric aspect and its
pros/cons. Finally, I’d like to share some insights and considerations for
the future, both for our company as for the Linux Audio Community and the
possible efforts towards attaining a sustainable business model with the
community efforts.","The MOD Project: an overview of the history, some comments and
considerations about an Open Source Linux Audio centric hardware business
attempt and some insights for the future.

MOD was born in 2010, first debuted at LAC in 2013, crowdfunded a mass
product in 2014, delivered it in 2016, consolidated in 2017 and got funded
in 2018.

These 8 years have been quite interesting and a lot has happened along. I
would like to go over this history and present what were the main
difficulties found along the way. I’d also put on the table some
considerations about the Open Source Linux Audio centric aspect and its
pros/cons. Finally, I’d like to share some insights and considerations for
the future, both for our company as for the Linux Audio Community and the
possible efforts towards attaining a sustainable business model with the
community efforts.",en,30:Gianfranco Ceccolini, 
ceminar,2018-06-09,3,11:30,01:40,One Hour Challenge,19,"A challenge to produce a music track within 60 minutes. Participants get a short MIDI file as a starting point, and woA challenge to produce a music track within 60 minutes. Participants get a short MIDI file as a starting point, and work on their track using the tools and techniques of their choice. An excellent way to test your skills as a producer. As the participants can use the program of their choice, the one hour challenge shows the diversity of music composition in the community. The participants need to bring their own hardware and headphones.rk on their track using the tools and techniques of their choice. An excellent way to test your skills as a producer. As the participants can use the program of their choice, the one hour challenge shows the diversity of music composition in the community. The participants need to bring their own hardware and headphones.","A challenge to produce a music track within 60 minutes. Participants get a short MIDI file as a starting point, and woA challenge to produce a music track within 60 minutes. Participants get a short MIDI file as a starting point, and work on their track using the tools and techniques of their choice. An excellent way to test your skills as a producer. As the participants can use the program of their choice, the one hour challenge shows the diversity of music composition in the community. The participants need to bring their own hardware and headphones.rk on their track using the tools and techniques of their choice. An excellent way to test your skills as a producer. As the participants can use the program of their choice, the one hour challenge shows the diversity of music composition in the community. The participants need to bring their own hardware and headphones.",en,31:Uroš Maravić| 32:David Vagt, 
mainhall,2018-06-09,3,12:00,00:30,Ableton Link – A technology to synchronize music software,42,"Ableton Link is a technology that synchronizes musical beat, tempo, phase, and start/stop commands across multiple applications running on one or more devices. Unlike conventional musical synchronization technologies, Link does not require master/client roles. Automatic discovery on a local area network enables a peer-to-peer system, which peers can join or leave at any time without disrupting others. Musical information is shared equally among peers, so any peer can start or stop while staying in time, or change the tempo, which is followed by all other peers.","Ableton Link is a technology that synchronizes musical beat, tempo, phase, and start/stop commands across multiple applications running on one or more devices. Unlike conventional musical synchronization technologies, Link does not require master/client roles. Automatic discovery on a local area network enables a peer-to-peer system, which peers can join or leave at any time without disrupting others. Musical information is shared equally among peers, so any peer can start or stop while staying in time, or change the tempo, which is followed by all other peers.",en,33:Florian Goltz, 
mainhall,2018-06-09,3,12:30,00:30,Software Architecture for a Multiple AVB Listener and Talker Scenario,43,"This paper presents a design approach for an AVB network segment deploying two different types of AVB server for multiple parallel streams. The first type is an UDP proxy server and the second server type is a digital signal processing server. The Linux real time operating system configurations are discussed, as well as the software architecture itself and the integration of the Jack audio server. A proper operation of the JACK server, alongside two JACK clients, in this multiprocessing environment could be shown, although a persisting buffer leak prevents significant jitter and latency measurements. A coarse assessment shows however, that the operations are within reasonable bounds.","This paper presents a design approach for an AVB network segment deploying two different types of AVB server for multiple parallel streams. The first type is an UDP proxy server and the second server type is a digital signal processing server. The Linux real time operating system configurations are discussed, as well as the software architecture itself and the integration of the Jack audio server. A proper operation of the JACK server, alongside two JACK clients, in this multiprocessing environment could be shown, although a persisting buffer leak prevents significant jitter and latency measurements. A coarse assessment shows however, that the operations are within reasonable bounds.",en,34:Christoph Kuhr| 35:Alexander Carôt, 
mainhall,2018-06-09,3,13:00,00:30,Rtosc - Realtime Safe Open Sound Control Messaging,39,"Audio applications which go beyond MIDI processing often utilize OSC (Open
Sound Control) to communicate complex parameters and advanced operations.
A variety of libraries offer solutions to network transportation of OSC
messages and provide approaches for pattern matching the messages in dispatch.
Dispatch however is performed inefficiently and manipulating OSC messages is
oftentimes not realtime safe.
rtosc was written to quickly dispatch and manipulate large quantities of OSC
messages in realtime constrained environments.
The fast dispatch is possible due to the internal tree representation as well
as the use of perfect-minimal-hashing within the pattern matching phase of
dispatch.

The primary user of rtosc is the ZynAddSubFX project which uses OSC to map
3,805,225 parameters and routinely dispatches bursts of up to 1,000 messages
per second during normal audio processing.
For audio application rtosc provides a simple OSC serialization toolset, the
realtime safe dispatch mechanisms, a ringbuffer implementation, and a rich
metadata system for representing application/library parameters.
This combination is not available in any other OSC library at the time of
writing.","Audio applications which go beyond MIDI processing often utilize OSC (Open
Sound Control) to communicate complex parameters and advanced operations.
A variety of libraries offer solutions to network transportation of OSC
messages and provide approaches for pattern matching the messages in dispatch.
Dispatch however is performed inefficiently and manipulating OSC messages is
oftentimes not realtime safe.
rtosc was written to quickly dispatch and manipulate large quantities of OSC
messages in realtime constrained environments.
The fast dispatch is possible due to the internal tree representation as well
as the use of perfect-minimal-hashing within the pattern matching phase of
dispatch.

The primary user of rtosc is the ZynAddSubFX project which uses OSC to map
3,805,225 parameters and routinely dispatches bursts of up to 1,000 messages
per second during normal audio processing.
For audio application rtosc provides a simple OSC serialization toolset, the
realtime safe dispatch mechanisms, a ringbuffer implementation, and a rich
metadata system for representing application/library parameters.
This combination is not available in any other OSC library at the time of
writing.",en,16:Mark McCurry, 
ceminar,2018-06-09,3,14:30,01:30,Yoshimi Live,4,"This is a workshop for the Yoshimi soft-synth, and is intended to give an overview of ideas for using the synth at live venues.","This is a workshop for the Yoshimi soft-synth, and is intended to give an overview of ideas for using the synth at live venues.",en,36:Will Godfrey, 
mainhall,2018-06-09,3,14:30,00:30,Chrysalis - Interactive Sound Sculpture,9,"Chrysalis is an interactive sound sculpture that relates sustainability, the link of the human being with his environment and the processes that it generates through time. The authors are Carla Colombini (sculptor), Martin Matus and Ezequiel Abregu (sound artists). The sound production system comprises three stages: Input - Process - Feedback. In this work are exposed the technical details of the sound device of the sculpture and the different stages implemented using, mostly, free software and open hardware.","Chrysalis is an interactive sound sculpture that relates sustainability, the link of the human being with his environment and the processes that it generates through time. The authors are Carla Colombini (sculptor), Martin Matus and Ezequiel Abregu (sound artists). The sound production system comprises three stages: Input - Process - Feedback. In this work are exposed the technical details of the sound device of the sculpture and the different stages implemented using, mostly, free software and open hardware.",en,37:Ezequiel Abregu, 
mainhall,2018-06-09,3,14:30,00:30,Ziggurat: A Step Sequencer for Linux,41,"We introduce a new, standalone software sequencer based on the hardware step sequencers common in electronic music production. Ziggurat supports both ALSA and JACK MIDI, and features polymetric sequencing, flexible signal routing, and dynamic sequence manipulation for live performance. This poster presents the motivation, design goals, implementation and status of the project.","We introduce a new, standalone software sequencer based on the hardware step sequencers common in electronic music production. Ziggurat supports both ALSA and JACK MIDI, and features polymetric sequencing, flexible signal routing, and dynamic sequence manipulation for live performance. This poster presents the motivation, design goals, implementation and status of the project.",en,38:Chris Chronopoulos, 
mainhall,2018-06-09,3,15:00,01:30,Lightning Talks,103,A set of lightning talks by you!,A set of lightning talks by you!,en,1:LAC team, 
ceminar,2018-06-09,3,17:00,01:30,Carla Plugin Host - Feature overview and workflows,24,"Carla is a fully-featured audio plugin host with support for many plugin formats, featuring automation of plugin parameters via MIDI CC, remote control over OSC, among others.
This workshop plans to give a quick overview of Carla and go through some workflows together with the audience.","Carla is a fully-featured audio plugin host with support for many plugin formats, featuring automation of plugin parameters via MIDI CC, remote control over OSC, among others.
This workshop plans to give a quick overview of Carla and go through some workflows together with the audience.",en,39:Filipe Coelho, 
mainhall,2018-06-09,3,17:00,02:00,Understanding and being creative with Pure Data’s data structures,26,"Pure Data’s data structures are one of the few core features that distinguish Pd from Max/MSP. Yet, they’re also one of the few modules which are used solely by a small group of users. The main reasons for this would be both the not yet very mature and complete collection of objects, as well as not very intuitive implementation in Pd’s language.
This workshop illustrates the possibilities of Pd’s data structures as a fruitful companion to any Pd user interested in a closer and more flexible interaction with the graphical representation of data.
The first part explains how to program with data structures (and their shortcomings). The second part analyses several examples of “real life” situations (display and control examples, up to complex patches to control / generate music in realtime).
After this workshop, it should be clear how to program with data structures, and integrate them inindividual patches.","Pure Data’s data structures are one of the few core features that distinguish Pd from Max/MSP. Yet, they’re also one of the few modules which are used solely by a small group of users. The main reasons for this would be both the not yet very mature and complete collection of objects, as well as not very intuitive implementation in Pd’s language.
This workshop illustrates the possibilities of Pd’s data structures as a fruitful companion to any Pd user interested in a closer and more flexible interaction with the graphical representation of data.
The first part explains how to program with data structures (and their shortcomings). The second part analyses several examples of “real life” situations (display and control examples, up to complex patches to control / generate music in realtime).
After this workshop, it should be clear how to program with data structures, and integrate them inindividual patches.",en,7:Joao Pais, 
nativespace,2018-06-09,3,21:00,00:15,The Electronic Orchestra Berlin: The Metaphysics of Notation,47,"12 electronic and electroacoustic instruments, live
spatialized on a 12-speaker system - the Electronic
Orchestra Charlottenburg (EOC), a project of the Electronic
Music Studio at TU Berlin, explores means of organizing and
spatializing the seemingly infinite diversity of electronic
sounds in a larger ensemble.

The Metaphysics of Notation (2008), by Mark Applebaum, is a
graphical score with a length of 22 meters, divided into 12
panels.For the interpretation of the score, each instrument is assigned one or several panels. The piece is performed
without a fixed time grid.
The performance will be spatialized using the SSR, PD and
Python, running on a Linux Server with Ubuntu Studio. The
server is remote controlled by the sound director via OSC and various input devices. Inputs and outputs are managed with a RME MADI card and several AD/DA converters.","12 electronic and electroacoustic instruments, live
spatialized on a 12-speaker system - the Electronic
Orchestra Charlottenburg (EOC), a project of the Electronic
Music Studio at TU Berlin, explores means of organizing and
spatializing the seemingly infinite diversity of electronic
sounds in a larger ensemble.

The Metaphysics of Notation (2008), by Mark Applebaum, is a
graphical score with a length of 22 meters, divided into 12
panels.For the interpretation of the score, each instrument is assigned one or several panels. The piece is performed
without a fixed time grid.
The performance will be spatialized using the SSR, PD and
Python, running on a Linux Server with Ubuntu Studio. The
server is remote controlled by the sound director via OSC and various input devices. Inputs and outputs are managed with a RME MADI card and several AD/DA converters.",en,46:Henrik von Coler| 47:David Runge, 
nativespace,2018-06-09,3,21:25,00:10,Pick It Up,49,"Composition for prepared electric guitar and live electronics (SuperCollider), with multichannel spatialization.","Composition for prepared electric guitar and live electronics (SuperCollider), with multichannel spatialization.",en,41:Krzysztof Gawlas, 
nativespace,2018-06-09,3,21:40,00:12,COSMO,21,"COSMO Collective is an open musical collaboration for musicians using DIY electronics and custom software written in Csound. There is no definite musical style, though it could perhaps be characterized as electro-acoustic
improvisation. The focus is on the exploration of sound and timbre, rather than traditional harmonics and rhythm, and exploiting the powers of Csound in this pursuit.","COSMO Collective is an open musical collaboration for musicians using DIY electronics and custom software written in Csound. There is no definite musical style, though it could perhaps be characterized as electro-acoustic
improvisation. The focus is on the exploration of sound and timbre, rather than traditional harmonics and rhythm, and exploiting the powers of Csound in this pursuit.",en,43:Alex Hofmann, 
nativespace,2018-06-09,3,22:30,00:15,Tessellations,23,"Tessellations plays with the repetition of material generated by manipulating the interval structure of the chord and submitting it to short processes that I generate myself in Python and execute them inside PD with the py object. This piece is an experimentation on the way I link time, material and narrative. The “tessellated” object not only morphs the musical material but also the space where it occurs and the performer responsible for it – player or computer –. Furthermore, the piece has 2 solos, one in which the performer improvises based on visual cues and musical anchor points, and the other which was generated algorithmically and is “written” on the score, this incorporates the idea of the act of composition as the tessellated object itself.","Tessellations plays with the repetition of material generated by manipulating the interval structure of the chord and submitting it to short processes that I generate myself in Python and execute them inside PD with the py object. This piece is an experimentation on the way I link time, material and narrative. The “tessellated” object not only morphs the musical material but also the space where it occurs and the performer responsible for it – player or computer –. Furthermore, the piece has 2 solos, one in which the performer improvises based on visual cues and musical anchor points, and the other which was generated algorithmically and is “written” on the score, this incorporates the idea of the act of composition as the tessellated object itself.",en,44:José Rafael Subía Valdez, 
nativespace,2018-06-09,3,22:47,00:30,mathr performs with Clive,22,"Claude Heiland-Allen (https://mathr.co.uk) is an artist from London interested in the complex emergent behaviour of simple systems, unusual geometries, and mathematical aesthetics.

Clive is an audio live-coding skeleton, implemented in C. It supports a two-phase edit-commit coding cycle allowing long-lived signal processing graphs to be modified without interrupting the sound.

Performance with Clive usually involves pre-preparation, from simple unit generators up to more complete compositions. The live-coding aspect involves editing a file in the performer’s favourite text editor, with the act of saving with Ctrl-S or other shortcut being timed to allow the new code to start executing in sync after the latency of compilation.","Claude Heiland-Allen (https://mathr.co.uk) is an artist from London interested in the complex emergent behaviour of simple systems, unusual geometries, and mathematical aesthetics.

Clive is an audio live-coding skeleton, implemented in C. It supports a two-phase edit-commit coding cycle allowing long-lived signal processing graphs to be modified without interrupting the sound.

Performance with Clive usually involves pre-preparation, from simple unit generators up to more complete compositions. The live-coding aspect involves editing a file in the performer’s favourite text editor, with the act of saving with Ctrl-S or other shortcut being timed to allow the new code to start executing in sync after the latency of compilation.",en,45:Claude Heiland-Allen, 
ceminar,2018-06-10,4,11:00,01:00,How to create real-time audio appliances with Debian GNU/Linux,30,"This hands-on workshop will introduce participants to methods for creating single-purpose GNU/Linux distributions for inexpensive ARM boards like the Raspberry Pi 3, and open source hardware including the BeagleBone Black. There will be an emphasis on optimising performance for demanding real-time audio applications such as xwax, as used in the PiDeck[1] project. Issues of maintainability, field upgrades and security will also be covered.","This hands-on workshop will introduce participants to methods for creating single-purpose GNU/Linux distributions for inexpensive ARM boards like the Raspberry Pi 3, and open source hardware including the BeagleBone Black. There will be an emphasis on optimising performance for demanding real-time audio applications such as xwax, as used in the PiDeck[1] project. Issues of maintainability, field upgrades and security will also be covered.",en,48:Daniel James| 49:Christopher Obbard, 
mainhall,2018-06-10,4,11:00,00:30,Jacktools - Realtime Audio Processors as Python Classes,46,"This paper introduces a set of real-time audio processing blocks that can be used as components in Python scripts. Each of them is both a Jack client and a Python class. The full power of Python can be used to control these modules, to combine them into systems of arbitrary complexity, and to interface them to anything that can be controlled from Python. The rationale behind this approach, some of the the implementations details, and possible applications are discussed.","This paper introduces a set of real-time audio processing blocks that can be used as components in Python scripts. Each of them is both a Jack client and a Python class. The full power of Python can be used to control these modules, to combine them into systems of arbitrary complexity, and to interface them to anything that can be controlled from Python. The rationale behind this approach, some of the the implementations details, and possible applications are discussed.",en,50:Fons Adriaensen, 
mainhall,2018-06-10,4,11:30,00:30,Distributed time-centric APIs with CLAPI,54,"Distributed control of applications by multiple simultaneous devices has traditionally been achieved via protocols such as MIDI or OSC. These simple protocols require additional semantics, often communicated out of band, in order to construct meaningful APIs.
We present the Concert Light-weight API (CLAPI) framework: a session-based pub/sub API framework that aims to simplify the definition and usage of semantic, time-centric distributed controls.","Distributed control of applications by multiple simultaneous devices has traditionally been achieved via protocols such as MIDI or OSC. These simple protocols require additional semantics, often communicated out of band, in order to construct meaningful APIs.
We present the Concert Light-weight API (CLAPI) framework: a session-based pub/sub API framework that aims to simplify the definition and usage of semantic, time-centric distributed controls.",en,51:Paul Weaver| 52:David Honour, 
mainhall,2018-06-10,4,12:00,01:00,Pro-audio on Arch Linux (revisited),34,"This workshop will be a recap and show-case on pro-audio packaging and end-user appliances on Arch Linux. The emphasis will be on direct best practices and use-cases, beginning with a short introduction to important changes applied to the [community] repository over the past months.
The workshop is meant as an entry point for long standing, new or only interested (and maybe soon to be) Arch Linux users to the use of pro-audio software.","This workshop will be a recap and show-case on pro-audio packaging and end-user appliances on Arch Linux. The emphasis will be on direct best practices and use-cases, beginning with a short introduction to important changes applied to the [community] repository over the past months.
The workshop is meant as an entry point for long standing, new or only interested (and maybe soon to be) Arch Linux users to the use of pro-audio software.",en,47:David Runge, 
ceminar,2018-06-10,4,14:00,01:30,QjackCtl Considered Harmful,33,"The proposed talk/workshop is yet again the follow-up on the tradition of LAC2013@IEM-Graz, LAC2014@ZKM-Karlsruhe, LAC2015@JGU-Mainz, LAC2016@c-base.org-Berlin and LAC2017@UJM-St.Etienne, as an informal manifest (but not exclusive) to the Qstuff* software collection. The future of QjackCtl [1] and the JACK-Audio-Connectionm-Kit, as the main Linux Audio infrastructure, shall be the main subject. Yours truly Qtractor [7], an audio/MIDI multi-track sequencer should be also of concern for discussion. All developers and users are kindly invited to discuss, complain and more importantly, exchange thoughts about the present, future and legacy of all the Qstuff*.

References:

[1] QjackCtl - A JACK Audio Connection Kit Qt GUI Interface
https://qjackctl.sourceforge.io

[2] Qsynth - A fluidsynth Qt GUI Interface
https://qsynth.sourceforge.io

[3] Qsampler - A LinuxSampler Qt GUI Interface
https://qsampler.sourceforge.io

[4] QXGEdit - A Qt XG Editor
https://qxgedit.sourceforge.io

[5] QmidiCtl - A MIDI Remote Controller via UDP/IP Multicast
https://qmidictl.sourceforge.io

[6] QmidiNet - A MIDI Network Gateway via UDP/IP Multicast
https://qmidinet.sourceforge.io

[7] Qtractor - An audio/MIDI multi-track sequencer
https://qtractor.sourceforge.io

[8] synthv1 - an old-school polyphonic synthesizer
https://synthv1.sourceforge.io

[9] samplv1 - an old-school polyphonic sampler
https://samplv1.sourceforge.io

[10] drumkv1 - an old-school drum-kit sampler
https://drumkv1.sourceforge.io

[11] padthv1 - an old-school polyphonic additive synthesizer
https://padthv1.sourceforge.io
","The proposed talk/workshop is yet again the follow-up on the tradition of LAC2013@IEM-Graz, LAC2014@ZKM-Karlsruhe, LAC2015@JGU-Mainz, LAC2016@c-base.org-Berlin and LAC2017@UJM-St.Etienne, as an informal manifest (but not exclusive) to the Qstuff* software collection. The future of QjackCtl [1] and the JACK-Audio-Connectionm-Kit, as the main Linux Audio infrastructure, shall be the main subject. Yours truly Qtractor [7], an audio/MIDI multi-track sequencer should be also of concern for discussion. All developers and users are kindly invited to discuss, complain and more importantly, exchange thoughts about the present, future and legacy of all the Qstuff*.

References:

[1] QjackCtl - A JACK Audio Connection Kit Qt GUI Interface
https://qjackctl.sourceforge.io

[2] Qsynth - A fluidsynth Qt GUI Interface
https://qsynth.sourceforge.io

[3] Qsampler - A LinuxSampler Qt GUI Interface
https://qsampler.sourceforge.io

[4] QXGEdit - A Qt XG Editor
https://qxgedit.sourceforge.io

[5] QmidiCtl - A MIDI Remote Controller via UDP/IP Multicast
https://qmidictl.sourceforge.io

[6] QmidiNet - A MIDI Network Gateway via UDP/IP Multicast
https://qmidinet.sourceforge.io

[7] Qtractor - An audio/MIDI multi-track sequencer
https://qtractor.sourceforge.io

[8] synthv1 - an old-school polyphonic synthesizer
https://synthv1.sourceforge.io

[9] samplv1 - an old-school polyphonic sampler
https://samplv1.sourceforge.io

[10] drumkv1 - an old-school drum-kit sampler
https://drumkv1.sourceforge.io

[11] padthv1 - an old-school polyphonic additive synthesizer
https://padthv1.sourceforge.io
",en,55:Rui Nuno Capela, 
mainhall,2018-06-10,4,14:00,01:00,LMMS 1.2: Changes and Improvements,36,A workshop focused on showcasing the new features and improvements of LMMS version 1.2 as well as an open discussion on the future of the software itself. The workshop is suitable for musicians and developers alike.,A workshop focused on showcasing the new features and improvements of LMMS version 1.2 as well as an open discussion on the future of the software itself. The workshop is suitable for musicians and developers alike.,en,31:Uroš Maravić| 56:Tres Finocchiaro, 
mainhall,2018-06-10,4,16:00,00:30,Closing speech,104,A short closing speech by the team.,A short closing speech by the team.,en,1:LAC team, 
